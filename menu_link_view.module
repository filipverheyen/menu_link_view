<?php

/**
 * @file
 * Contains menu_link_view.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Cache\Cache;
use Drupal\Core\Form\FormStateInterface;
use Drupal\menu_link_content\Entity\MenuLinkContent;

/**
 * Implements hook_help().
 */
function menu_link_view_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    case 'help.page.menu_link_view':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('The Menu Link View module allows you to add views as menu items.') . '</p>';
      return $output;
  }
}

/**
 * Implements hook_entity_insert().
 */
function menu_link_view_entity_insert($entity) {
  if ($entity->getEntityTypeId() == 'menu_link_view') {
    // Create a menu_link_content entity for this view link
    _menu_link_view_ensure_menu_link_content($entity);

    // Invalidate necessary cache tags
    Cache::invalidateTags(['menu:' . $entity->getMenuName(), 'config:system.menu.' . $entity->getMenuName()]);

    // Log for debugging
    \Drupal::logger('menu_link_view')->info('Menu link view entity @id inserted, content link created', [
      '@id' => $entity->id()
    ]);
  }
}

/**
 * Implements hook_entity_update().
 */
function menu_link_view_entity_update($entity) {
  if ($entity->getEntityTypeId() == 'menu_link_view') {
    // Update or create the menu_link_content entity
    _menu_link_view_ensure_menu_link_content($entity);

    // Invalidate necessary cache tags
    Cache::invalidateTags(['menu:' . $entity->getMenuName(), 'config:system.menu.' . $entity->getMenuName()]);

    // Log for debugging
    \Drupal::logger('menu_link_view')->info('Menu link view entity @id updated, content link updated', [
      '@id' => $entity->id()
    ]);
  }
}

/**
 * Implements hook_entity_delete().
 */
function menu_link_view_entity_delete($entity) {
  if ($entity->getEntityTypeId() == 'menu_link_view') {
    // Find and delete any associated menu_link_content entities
    $storage = \Drupal::entityTypeManager()->getStorage('menu_link_content');
    $menu_links = $storage->loadByProperties([
      'menu_name' => $entity->getMenuName(),
      'link__uri' => 'route:<nolink>',
      'title' => $entity->label() . ' [View]'
    ]);

    foreach ($menu_links as $menu_link) {
      $menu_link->delete();
    }

    // Invalidate necessary cache tags
    Cache::invalidateTags(['menu:' . $entity->getMenuName(), 'config:system.menu.' . $entity->getMenuName()]);

    // Log for debugging
    \Drupal::logger('menu_link_view')->info('Menu link view entity @id deleted, content link removed', [
      '@id' => $entity->id()
    ]);
  }
}

/**
 * Helper function to ensure a menu_link_content entity exists for the view link.
 *
 * @param \Drupal\menu_link_view\Entity\MenuLinkView $entity
 *   The menu link view entity.
 */
function _menu_link_view_ensure_menu_link_content($entity) {
  $storage = \Drupal::entityTypeManager()->getStorage('menu_link_content');

  // Try to find an existing menu link
  $menu_links = $storage->loadByProperties([
    'menu_name' => $entity->getMenuName(),
    'link__uri' => 'route:<nolink>',
    'title' => $entity->label() . ' [View]'
  ]);

  $menu_link = reset($menu_links);

  if (!$menu_link) {
    // Create a new menu link content entity
    $menu_link = MenuLinkContent::create([
      'title' => $entity->label() . ' [View]',
      'link' => ['uri' => 'route:<nolink>'],
      'menu_name' => $entity->getMenuName(),
      'weight' => $entity->getWeight(),
      'expanded' => TRUE,
      'description' => $entity->getDescription(),
      'metadata' => [
        'entity_id' => $entity->id(),
        'view_id' => $entity->getViewId(),
        'display_id' => $entity->getDisplayId(),
      ],
    ]);

    // Set parent if available
    if ($entity->getParent()) {
      $menu_link->set('parent', $entity->getParent());
    }

    $menu_link->save();

    \Drupal::logger('menu_link_view')->info('Created menu_link_content entity for view link @id', [
      '@id' => $entity->id()
    ]);
  }
  else {
    // Update the existing menu link
    $menu_link->set('title', $entity->label() . ' [View]');
    $menu_link->set('description', $entity->getDescription());
    $menu_link->set('weight', $entity->getWeight());

    // Update parent if available
    if ($entity->getParent()) {
      $menu_link->set('parent', $entity->getParent());
    }

    $menu_link->save();

    \Drupal::logger('menu_link_view')->info('Updated menu_link_content entity for view link @id', [
      '@id' => $entity->id()
    ]);
  }

  return $menu_link;
}

/**
 * Implements hook_preprocess_menu().
 */
function menu_link_view_preprocess_menu(&$variables) {
  // Get the expander service.
  if (\Drupal::hasService('menu_link_view.expander')) {
    $expander = \Drupal::service('menu_link_view.expander');
    // Expand the menu items.
    if (isset($variables['items']) && !empty($variables['items'])) {
      $variables['items'] = $expander->expandTree($variables['items']);
    }
  }
}

/**
 * Implements hook_theme().
 */
function menu_link_view_theme($existing, $type, $theme, $path) {
  return [
    'menu_link_view' => [
      'variables' => [
        'title' => NULL,
        'items' => [],
      ],
    ],
  ];
}

/**
 * Implements hook_page_attachments().
 */
function menu_link_view_page_attachments(array &$attachments) {
  // Attach our CSS library.
  $attachments['#attached']['library'][] = 'menu_link_view/menu_link_view';
}

/**
 * Implements hook_library_info_build().
 */
function menu_link_view_library_info_build() {
  $libraries = [];

  $libraries['menu_link_view'] = [
    'version' => '1.x',
    'css' => [
      'theme' => [
        'css/menu_link_view.css' => [],
      ],
    ],
  ];

  return $libraries;
}
